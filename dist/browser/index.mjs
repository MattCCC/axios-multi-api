var R=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=(a,e,t,s)=>{for(var n=s>1?void 0:s?m(e,t):e,r=a.length-1,o;r>=0;r--)(o=a[r])&&(n=(s?o(e,t,n):o(n))||n);return s&&n&&R(e,t,n),n};import{applyMagic as b}from"js-magic";import h from"axios";import{applyMagic as q}from"js-magic";var f=class{constructor(e,t){this.logger=e,this.httpRequestErrorService=t}process(e){this.logger&&this.logger.warn&&this.logger.warn("API ERROR",e);let t=e;typeof e=="string"&&(t=new Error(e)),this.httpRequestErrorService&&(typeof this.httpRequestErrorService.process<"u"?this.httpRequestErrorService.process(t):typeof this.httpRequestErrorService=="function"&&this.httpRequestErrorService(t))}};var c=class{constructor({baseURL:e="",timeout:t=null,cancellable:s=!1,strategy:n=null,flattenResponse:r=null,defaultResponse:o={},logger:i=null,onError:l=null,...u}){this.timeout=3e4;this.cancellable=!1;this.strategy="silent";this.flattenResponse=!0;this.defaultResponse=null;this.timeout=t!==null?t:this.timeout,this.strategy=n!==null?n:this.strategy,this.cancellable=s||this.cancellable,this.flattenResponse=r!==null?r:this.flattenResponse,this.defaultResponse=o,this.logger=i||global.console||window.console||null,this.httpRequestErrorService=l,this.requestsQueue=new Map,this.requestInstance=h.create({...u,baseURL:e,timeout:this.timeout})}getInstance(){return this.requestInstance}interceptRequest(e){this.getInstance().interceptors.request.use(e)}__get(e){return e in this?this[e]:this.prepareRequest.bind(this,e)}prepareRequest(e,t,s=null,n=null){return this.handleRequest({type:e,url:t,data:s,config:n})}buildRequestConfig(e,t,s,n){let r=e.toLowerCase();return{...n,url:t,method:r,[r==="get"||r==="head"?"params":"data"]:s||{}}}processRequestError(e,t){if(h.isCancel(e))return;t.onError&&typeof t.onError=="function"&&t.onError(e),new f(this.logger,this.httpRequestErrorService).process(e)}async outputErrorResponse(e,t){let s=t.cancelToken&&h.isCancel(e),n=t.strategy||this.strategy;return s&&!t.rejectCancelled?this.defaultResponse:n==="silent"?(await new Promise(()=>null),this.defaultResponse):n==="reject"||n==="throwError"?Promise.reject(e):this.defaultResponse}isRequestCancelled(e,t){return t.cancelToken&&h.isCancel(e)}addCancellationToken(e,t,s){if(!this.cancellable&&!s.cancellable)return{};if(typeof s.cancellable<"u"&&!s.cancellable)return{};let n=`${e}-${t}`,r=this.requestsQueue.get(n);r&&r.cancel();let o=h.CancelToken.source();this.requestsQueue.set(n,o);let i=this.requestsQueue.get(n)||{};return i.token?{cancelToken:i.token}:{}}async handleRequest({type:e,url:t,data:s=null,config:n=null}){let r=null,o=n||{},i=this.buildRequestConfig(e,t,s,o);i={...this.addCancellationToken(e,t,i),...i};try{r=await this.requestInstance.request(i)}catch(l){return this.processRequestError(l,i),this.outputErrorResponse(l,i)}return this.processResponseData(r)}processResponseData(e){return e.data?this.flattenResponse?typeof e.data=="object"&&typeof e.data.data<"u"&&Object.keys(e.data).length===1?e.data.data:e.data:e:this.defaultResponse}};c=g([q],c);var d=class{constructor({apiUrl:e,apiEndpoints:t,timeout:s=null,cancellable:n=!1,strategy:r=null,flattenResponse:o=null,defaultResponse:i={},logger:l=null,onError:u=null,...p}){this.apiUrl="";this.apiUrl=e,this.apiEndpoints=t,this.logger=l,this.httpRequestHandler=new c({...p,baseURL:this.apiUrl,timeout:s,cancellable:n,strategy:r,flattenResponse:o,defaultResponse:i,logger:l,onError:u})}getInstance(){return this.httpRequestHandler.getInstance()}__get(e){return e in this?this[e]:this.apiEndpoints[e]?this.handleRequest.bind(this,e):this.handleNonImplemented.bind(this,e)}async handleRequest(...e){let t=e[0],s=this.apiEndpoints[t],n=e[1]||{},r=e[2]||{},o=e[3]||{},i=s.url.replace(/:[a-z]+/gi,p=>r[p.substring(1)]?r[p.substring(1)]:p),l=null,u={...s};return delete u.url,delete u.method,l=await this.httpRequestHandler[(s.method||"get").toLowerCase()](i,n,{...o,...u}),l}handleNonImplemented(e){return this.logger&&this.logger.log&&this.logger.log(`${e} endpoint not implemented.`),Promise.resolve(null)}};d=g([b],d);var A=a=>new d(a);export{d as ApiHandler,f as HttpRequestErrorHandler,c as HttpRequestHandler,A as createApiFetcher};
//# sourceMappingURL=index.mjs.map